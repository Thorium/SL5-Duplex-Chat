{"name":"Sl5-duplex-chat","tagline":"Silverlight 5 Chat: Full-duplex Publish/Subscribe -pattern on TCP/IP concept demo (WCF F# & SL F#)","body":"Silverlight Chat\r\n\r\n+ Full-duplex TCP/IP concept demo. (\"PollingDuplex\")\r\n+ Publish/Subscribe -pattern: Client registers to server and server sends (push based) events from other users.\r\n+ Almost real-time communication with other users (/Silverlight clients)!\r\n+ Database could be made, but it is optional: Now the server just forwards (/filters) the client messages to other clients.\r\n\r\nThis is chat as a concept demo. The same concept could be used as for example multiplayer game (/multiuser software like Google Wave/Docs) with high interaction level between users. (Silverlight 5 works on Facebook, Windows Phone, ...) We could have one or many servers per user, so the user load could be distributed (eg. by location, game board coordinates, etc).\r\n\r\nDevelopment tool: Visual Studio 2012 RC (with Silverlight 5 SDK). Plugins: None.\r\nIIS is used as host. I haven't tried with others. WCF Serialization in binary mode, can be read with Fiddler2.\r\n\r\nTechnology stack:\r\n+ F# (FSharp) as main language\r\n+ WCF WebService (\"PollingDuplex\")\r\n+ Silverlight 5 client\r\n\r\nThis is quite much like the WebSocket concept which would propably work with the same source code, but different web.config for WCF service, but needs (Win8 based) IIS 8.\r\n  \r\nSetup:\r\n1. Use Visual Studio 11 (RC) and have Silverlight 5 SDK\r\n2. Set the WCFHost as start up project \r\n3. You may have to refererence FSharp core dll again (if you have a different version) \r\n4. From WCFHost project properties create virtual dir to IIS.\r\nThat's it.\r\n\r\nProject structure (the interesting ones):\r\n\r\n Servere side:\r\n  - WCFHost: (IIS VDir)\r\n    + PushService.svc WCF WebService host\r\n    + Chat.html: Silverlight host HTML page\r\n    + Web.Config: Some configs\r\n  - ServiceLogics:\r\n    + StreamClient.fs: Interface for push messages from server to client\r\n    + PushService.svc.fs: WebService logics, interface for client to call server\r\n Client side:\r\n  - DataClient\r\n    + Generated service reference\r\n  - ClientLogics:\r\n    + Commands.fs: Silverlight ICommands\r\n    + ClientViewModel.fs: Client side ViewModel for UI\r\n  - SLClient:\r\n    + MainPage.xaml: Silverlight UI\r\n\t\r\nReferences / similar stuff:\r\n - http://msdn.microsoft.com/en-us/library/cc645027(v=vs.95).aspx\r\n - http://www.c-sharpcorner.com/uploadfile/pchandraker/http-duplex-messaging-in-silverlight-4/\r\n - http://weblogs.asp.net/dwahlin/archive/2011/02/06/syncing-data-with-a-server-using-silverlight-and-http-polling-duplex.aspx\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}